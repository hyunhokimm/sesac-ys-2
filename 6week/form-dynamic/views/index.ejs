<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>동적</title>
    <script
      src="https://code.jquery.com/jquery-3.7.1.min.js"
      integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo="
      crossorigin="anonymous"
    ></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  </head>
  <body>
    <h1>회원가입</h1>
    <form name="register">
      <input type="text" placeholder="ID" id="id" name="id" required />
      <input type="password" placeholder="password" name="pw" />
      <input type="text" placeholder="name" name="name" />
      <br />
      <button type="button" onclick="ajaxGet()">ajax get</button>
      <button type="button" onclick="ajaxPost()">ajax post</button>
      <br />
      <button type="button" onclick="axiosGet()">axios get</button>
      <button type="button" onclick="axiosPost()">axios post</button>
      <br />
      <button type="button" onclick="fetchGet()">fetch get</button>
      <button type="button" onclick="fetchPost()">fetch post</button>
      <br />
      <button type="button" onclick="pageMove()">페이지 이동</button>
    </form>
    <h3 id="result"></h3>
    <script>
      function getData() {
        const form = document.forms["register"];
        if (!form.checkValidity()) {
          form.reportValidity();
          return;
        }
        console.log(form);

        const data = {
          id: form.id.value,
          name: form.name.value,
          password: form.pw.value,
        };
        return data;
      }

      function ajaxGet() {
        data = getData();
        if (!data) return;
        $.ajax({
          type: "GET",
          url: `/ajax`,
          data,
          success: function (result) {
            console.log(result);
            $("#result").html(`ajax get ${result.name} 다녀왔니?`);
          },
        });
      }

      function ajaxPost() {
        data = getData();
        if (!data) return;
        $.ajax({
          type: "POST",
          url: "/ajax",
          data,
          success: function (result) {
            console.log(result);
            $("#result").html(`ajax post ${result.name} 왓니?`);
          },
        });
      }

      function axiosGet() {
        data = getData();
        if (!data) return;
        axios({
          method: "get",
          url: "/axios",
          params: data,
        }).then((result) => {
          const { name, password } = result.data;
          $("#result").html(`axios get ${name}  입니다.`);
        });
      }

      async function axiosPost() {
        const data = getData();
        if (!data) return;
        try {
          const res = await axios({
            method: "post",
            url: "/axios",
            data,
          });
          const { id, name, password } = res.data;
          $("#result").html(`axios post ${name}  입니다.`);
        } catch (error) {
          console.log(error.name);
          if (error.name == "AxiosError") {
            $("#result").html(`${error.name} 에러입니다.`);
          }
        }
      }

      function fetchGet() {
        const data = getData();
        if (!data) return;
        // fetch는 기본값이 get이고 get요청시 데이터는 query로만 보낼수 있다.
        // const urlQuery = `id=${data.id}&name=${data.name}&password=${data.password}`;
        // data를 쿼리로 변경하기
        const urlQuery = new URLSearchParams(data).toString();

        fetch(`/fetch?${urlQuery}`, {
          method: "get",
        }).then(async (res) => {
          // 응답을 처리하는 과정에서 json으로 파싱해야함
          console.log(res);
          //   await res.json();

          res.json().then((res) => $("#result").html(`fetch get ${res.name}`));
        });
      }
      async function fetchPost() {
        const data = getData();
        if (!data) return;
        const urlQuery = new URLSearchParams(data).toString();

        // 원래는 기본값이 : x-www-form-urlencoded post
        // fetch post 요청시에는 기본값을 사용 했을때 동작을 안함.
        // content-type 을 application/json으로 변경
        const res = await fetch("/fetch", {
          method: "post",
          headers: {
            //
            "Content-type": "application/json",
          },
          //   object 를 json 형태로 변환할때
          body: JSON.stringify(data),
        });
        const result = await res.json();
        console.log(result);
        $("#result").html(`fetch post ${result.name}`);
      }

      function pageMove() {
        // axios({
        //   method: "get",
        //   url: "/user",
        // }).then((res) => console.log(res));

        location.href = "/user";
      }
    </script>
  </body>
</html>
